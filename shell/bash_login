# vim: filetype=sh

color_black='\e[0;30m'
color_red='\e[0;31m'
color_green='\e[0;32m'
color_yellow='\e[0;33m'
color_blue='\e[0;34m'
color_purple='\e[0;35m'
color_cyan='\e[0;36m'
color_reset='\e[m'

EDITOR=vi

# prompt
echo "user: ${USER}"
if [ $USER == 'root' ]; then
  export PS1="[${color_red}\A${color_reset}] ${color_red}\u@\h${color_reset}\n(\w)\$(__git_ps1) "
elif [[ $OSTYPE == darwin* ]]; then
  export PS1="[${color_yellow}\A${color_reset}] ${color_yellow}\u@\h${color_reset}\n(\w)\$(__git_ps1) "
else
  export PS1="[${color_green}\A${color_reset}] ${color_green}\u@\h${color_reset}\n(\w)\$(__git_ps1) "
fi
export MYSQL_PS1="\u@\h (\d) $ "

EDITOR=vi

# bash_aliases
if [ -f ~/.bash_aliases ]; then
  echo "Loading bash_aliases"
  source ~/.bash_aliases
fi

# pip
if [[ $OSTYPE == linux* ]]; then
  export PYTHONPATH2=/usr/local/lib/python2.7/dist-packages:/usr/local/lib/python2.7/site-packages
  export PYTHONPATH3=/usr/lib/python3/dist-packages:/usr/local/lib/python3.6/site-packages
elif [[ $OSTYPE == darwin* ]]; then
  export PIP_REQUIRE_VIRTUALENV=true

  gpip() {
    PIP_REQUIRE_VIRTUALENV=""
    pip "$@"
    PIP_REQUIRE_VIRTUALENV=true
  }
fi

# github shortcuts
if [[ $OSTYPE == linux* ]]; then
  if [[ -e /etc/bash_completion.d/git-prompt ]]; then
    source /etc/bash_completion.d/git-prompt
  fi
elif [[ $OSTYPE == darwin* ]]; then
  if [[ -e $HOME/.git-prompt.sh ]]; then
    # curl -o ~/.git-prompt.sh https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
    source $HOME/.git-prompt.sh
  elif [[ -e /Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh ]]; then
    source /Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh
  fi
else
  __git_ps1() { git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\:\1/'; }
fi

export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1

# manage bash history
export HISTSIZE=10000
export HISTCONTROL=ignoreboth:erasedups
export HISTIGNORE='ls:bg:fg:history'
export HISTTIMEFORMAT='%F %T '

# Recommended by brew doctor
if [[ ! $PATH =~ ^/usr/local/sbin:|:/usr/local/sbin:|:/usr/local/sbin$ ]]; then
  echo "Adding /usr/local/sbin to $PATH"
  export PATH=/usr/local/sbin:$PATH
fi

# OPT OUT of sending telemetry data to Microsoft
# docs.microsoft.com/en-us/dotnet/core/tools/telemetry
export FUNCTIONS_CORE_TOOLS_TELEMETRY_OPTOUT=true

if [[ $OSTYPE == darwin* ]]; then
  # Brew
  # https://docs.brew.sh/Manpage#environment
  # export HOMEBREW_NO_INSTALL_CLEANUP
  # export HOMEBREW_NO_ENV_HINTS
  export HOMEBREW_NO_ANALYTICS=1
  export HOMEBREW_UPDATE_REPORT_ONLY_INSTALLED=1
fi
